heat_template_version: 2013-05-23

description: >
  Single mariaDB database.
parameters:

  key_name:
    type: string
    label: Key Name
    description: Name of a KeyPair to enable SSH access to the instance
  flavor:
    type: string
    label: Flavor
    description: Instance type for mariadb server
  db_name:
    type: string
    label: Database Name
    description: Database name
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    label: Database Username
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters
  db_password:
    type: string
    description: The WordPress database admin account password
    label: Database Password
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters
  private_network:
    type: string
    label: Private Network
    description: Setup Private network
  db_root_password:
    type: string
    description: Root password for MySQL
    label: Database ROOT Password
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

resources:
  define_port:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_param: private_network }
      
  instance:
    type: OS::Nova::Server
    networks:
      - port: {get_resource: define_port}
    properties:
      name: { get_param: 'OS::stack_name' }
      image: CentOS 7.3
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            yum -y install epel-release
            yum -y install mariadb mariadb-server
            touch /var/log/mariadb/mariadb.log
            chown mysql.mysql /var/log/mariadb/mariadb.log
            # sed -i "s/.*bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/my.cnf
            cat << EOF > /etc/my.cnf
            [mysqld]
            datadir=/var/lib/mysql
            socket=/var/lib/mysql/mysql.sock
            # Disabling symbolic-links is recommended to prevent assorted security risks
            symbolic-links=0
            # Settings user and group are ignored when systemd is used.
            # If you need to run mysqld under a different user or group,
            # customize your systemd unit file for mariadb according to the
            # instructions in http://fedoraproject.org/wiki/Systemd
            bind-address = 0.0.0.0

            [mysqld_safe]
            log-error=/var/log/mariadb/mariadb.log
            pid-file=/var/run/mariadb/mariadb.pid

            #
            # include all files from the config directory
            #
            !includedir /etc/my.cnf.d
            EOF
            systemctl enable mariadb.service
            systemctl start mariadb.service
            # Setup MySQL root password and create a user
            mysqladmin -u root password db_rootpassword
            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON *.* TO "db_user"@"%"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF
          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }
